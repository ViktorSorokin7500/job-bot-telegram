// src/scenes/registrationScene.js
const { Scenes, Markup } = require("telegraf");
const { UKRAINE_OBLASTS } = require("../utils/constants");
const mainMenu = require("../keyboards/mainMenu");
const createRegionSelector = require("../keyboards/regionSelector");

const createRegistrationWizard = (supabase) => {
  const registrationWizard = new Scenes.WizardScene(
    "registrationWizard",
    // --- –ö—Ä–æ–∫ 1 (—ñ–Ω–¥–µ–∫—Å 0): –ó–∞–ø–∏—Ç—É—î–º–æ —ñ–º'—è ---
    async (ctx) => {
      ctx.wizard.state.data = {}; // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –æ–±'—î–∫—Ç –¥–ª—è –¥–∞–Ω–∏—Ö
      ctx.wizard.state.data.selectedRegions = []; // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–∞—Å–∏–≤ –æ–±—Ä–∞–Ω–∏—Ö –æ–±–ª–∞—Å—Ç–µ–π
      await ctx.reply("–í—ñ—Ç–∞—é! üëã ...–Ø–∫ —è –º–æ–∂—É –¥–æ –≤–∞—Å –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—å?");
      return ctx.wizard.next();
    },

    // --- –ö—Ä–æ–∫ 2 (—ñ–Ω–¥–µ–∫—Å 1): –û—Ç—Ä–∏–º—É—î–º–æ —ñ–º'—è, –∑–∞–ø–∏—Ç—É—î–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω ---
    async (ctx) => {
      if (!ctx.message?.text) {
        await ctx.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —ñ–º'—è.");
        return;
      }
      ctx.wizard.state.data.name = ctx.message.text;
      await ctx.reply(
        `–ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å, ${ctx.wizard.state.data.name}!\n–¢–µ–ø–µ—Ä –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.`,
        Markup.keyboard([
          Markup.button.contactRequest("üì± –ù–∞–¥–∞—Ç–∏ –º—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"),
        ])
          .resize()
          .oneTime()
      );
      return ctx.wizard.next();
    },

    // --- –ö—Ä–æ–∫ 3 (—ñ–Ω–¥–µ–∫—Å 2): –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ–∫–∞–∑—É—î–º–æ –≤–∏–±—ñ—Ä –æ–±–ª–∞—Å—Ç–µ–π ---
    async (ctx) => {
      const phone = ctx.message?.contact?.phone_number || ctx.message?.text;
      if (!phone) {
        await ctx.reply("–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.");
        return;
      }
      ctx.wizard.state.data.phone = phone;

      await ctx.reply(
        "–¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∞–±–æ –¥–µ–∫—ñ–ª—å–∫–∞ –æ–±–ª–∞—Å—Ç–µ–π:",
        createRegionSelector(ctx.wizard.state.data.selectedRegions)
      );
      // –í–ê–ñ–õ–ò–í–û: –º–∏ –Ω–µ –≤–∏–∫–ª–∏–∫–∞—î–º–æ wizard.next(), –±–æ —á–µ–∫–∞—î–º–æ –Ω–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
    },

    // --- –ö—Ä–æ–∫ 4 (—ñ–Ω–¥–µ–∫—Å 3): –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é ---
    async (ctx) => {
      const specialization = ctx.message?.text;
      if (specialization && specialization !== "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏") {
        ctx.wizard.state.data.specialization = specialization;
      }
      await ctx.reply(
        "–ù–∞–ø–∏—à—ñ—Ç—å –∫—ñ–ª—å–∫–∞ —Å–ª—ñ–≤ –ø—Ä–æ —Å–µ–±–µ (–º—ñ–Ω—ñ-—Ä–µ–∑—é–º–µ –¥–æ 200 —Å–∏–º–≤–æ–ª—ñ–≤).",
        Markup.keyboard([["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏"]])
          .resize()
          .oneTime()
      );
      return ctx.wizard.next();
    },

    // --- –ö—Ä–æ–∫ 5 (—ñ–Ω–¥–µ–∫—Å 4): –û—Ç—Ä–∏–º—É—î–º–æ –±—ñ–æ —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å–µ –≤ –ë–î ---
    async (ctx) => {
      const bio = ctx.message?.text;
      if (bio && bio !== "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏") {
        ctx.wizard.state.data.bio = bio;
      }

      const {
        name,
        phone,
        selectedRegions,
        specialization,
        bio: userBio,
      } = ctx.wizard.state.data;
      const telegramId = ctx.from.id;

      let regionsToSave = selectedRegions;
      if (selectedRegions.includes("–í—Å—è –£–∫—Ä–∞—ó–Ω–∞")) {
        regionsToSave = UKRAINE_OBLASTS.filter((o) => o !== "–í—Å—è –£–∫—Ä–∞—ó–Ω–∞");
      }

      await ctx.reply("–•–≤–∏–ª–∏–Ω–∫—É, —Ä–µ—î—Å—Ç—Ä—É—é –≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å...");
      try {
        const { error } = await supabase.from("profiles").insert([
          {
            telegram_id: telegramId,
            contact_name: name,
            contact_phone: phone,
            search_oblast: regionsToSave,
            specialization: specialization || null,
            bio: userBio || null,
          },
        ]);
        if (error) throw error;
        await ctx.reply("‚úÖ –í—ñ—Ç–∞—é, –≤–∞—Å —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ!", mainMenu);
      } catch (dbError) {
        console.error("Error saving profile:", dbError);
        await ctx.reply("–ù–∞ –∂–∞–ª—å, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.");
      }
      return ctx.scene.leave();
    }
  );

  // --- –û–ë–†–û–ë–ù–ò–ö –î–õ–Ø –Ü–ù–¢–ï–†–ê–ö–¢–ò–í–ù–û–á –ö–õ–ê–í–Ü–ê–¢–£–†–ò ---
  registrationWizard.on("callback_query", async (ctx) => {
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ —Ü–µ–π –æ–±—Ä–æ–±–Ω–∏–∫ –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –Ω–∞ –∫—Ä–æ—Ü—ñ –≤–∏–±–æ—Ä—É –æ–±–ª–∞—Å—Ç–µ–π (—ñ–Ω–¥–µ–∫—Å 2)
    if (ctx.wizard.cursor !== 2) {
      return;
    }

    const choice = ctx.callbackQuery.data;
    await ctx.answerCbQuery();

    if (choice === "region_done") {
      if (ctx.wizard.state.data.selectedRegions.length === 0) {
        await ctx.reply("‚ùå –í–∏ –Ω–µ –æ–±—Ä–∞–ª–∏ –∂–æ–¥–Ω–æ—ó –æ–±–ª–∞—Å—Ç—ñ. –û–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω—É.");
        return;
      }
      // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ "–ì–æ—Ç–æ–≤–æ", –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É
      await ctx.editMessageText(
        `–û–±—Ä–∞–Ω—ñ –æ–±–ª–∞—Å—Ç—ñ: ${ctx.wizard.state.data.selectedRegions.join(", ")}`
      );
      await ctx.reply(
        '–í–∫–∞–∂—ñ—Ç—å –≤–∞—à—É —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é (–Ω–∞–ø—Ä., "–í–æ–¥—ñ–π", "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä").',
        Markup.keyboard([["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏"]])
          .resize()
          .oneTime()
      );
      return ctx.wizard.next(); // <--- –û—Å—å —Ç—É—Ç –º–∏ —Ä—É—Ö–∞—î–º–æ —Å—Ü–µ–Ω—É –¥–∞–ª—ñ
    }

    const region = choice.replace("region_", "");
    const selected = ctx.wizard.state.data.selectedRegions;

    if (selected.includes(region)) {
      ctx.wizard.state.data.selectedRegions = selected.filter(
        (r) => r !== region
      );
    } else {
      ctx.wizard.state.data.selectedRegions.push(region);
    }

    await ctx.editMessageReplyMarkup(
      createRegionSelector(ctx.wizard.state.data.selectedRegions).reply_markup
    );
  });

  return registrationWizard;
};

module.exports = createRegistrationWizard;
